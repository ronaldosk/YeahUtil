using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Abp.Application.Services.Dto;
using Abp.Domain.Repositories;
using Abp.Linq.Extensions;
using [AppName].[BusinessName]s.Dtos;
using Microsoft.EntityFrameworkCore;

namespace [AppName].[BusinessName]s
{
    public class [BusinessName]AppService :[BusinessName]AppServiceBase, I[BusinessName]AppService
    {
        private readonly IRepository<[BusinessName]> _[businessName]Repository;

        public [BusinessName]AppService(IRepository<[BusinessName]> [businessName]Repository)
        {
            _[businessName]Repository = [businessName]Repository;
        }

        public async Task<ListResultDto<[BusinessName]ListDto>> GetAll(GetAll[BusinessName]sInput input)
        {
            var [businessName]s = await _[businessName]Repository
                .GetAll()
                .Include(t => t.Id)
                .ToListAsync();

            return new ListResultDto<[BusinessName]ListDto>(
                ObjectMapper.Map<List<[BusinessName]ListDto>>([businessName]s)
            );
        }

        public async System.Threading.Tasks.Task Create(Create[BusinessName]Input input)
        {
            var [businessName] = ObjectMapper.Map<[BusinessName]>(input);
            await _[businessName]Repository.InsertAsync([businessName]);
        }
    }
}
